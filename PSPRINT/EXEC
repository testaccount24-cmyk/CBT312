./ ADD NAME=PSPRINT
        /* ---------------------  rexx procedure  ---------------------- *
         * Name:      PSPRINT                                            *
         *                                                               *
         * Function:  Convert a text file into a PostScript print        *
         *            stream.                                            *
         *                                                               *
         * Syntax:    %PSPRINT input-file output-file / options          *
         *                                                               *
         * where:                                                        *
         *        input-file is the data set name of the input text file *
         *        output-file is optional and is the data set name that  *
         *           will contain the postscript results.                *
         *           - if not specified this is dynamically generated.   *
         *           - if specified the output file will not be deleted  *
         *             at the end of processing.                         *
         *           - if specified as @ then the ISPF dialog will be    *
         *             invoked for additional prompting.                 *
         *       / is the delimeter used to offset the options           *
         *       options are optional values which may be:               *
         *           PORT, WIDE, LAND, or 2UP for print orientation      *
         *           DEBUG to cause tracing of the rexx program          *
         *             during execution                                  *
         *           NOLPR to prevent the execution of the LPRPRINT exec.*
         *                                                               *
         * If no parameters are entered then the ISPF Dialog is invoked. *
         *                                                               *
         * Defaults:                                                     *
         *            PORT orientation and delete the output file after  *
         *            invoking the lprprint procedure.                   *
         *                                                               *
         * Author:    Lionel B. Dyck                                     *
         *            Rockwell International                             *
         *            P.O. Box 2515                                      *
         *            Seal Beach, California 90740                       *
         *            (310) 797-1125                                     *
         *            IBMMail:  USROKNTN                                 *
         *            Internet: lbd@osreq48.rockwell.com                 *
         *            IBMLINK:  ROK2027                                  *
         *                                                               *
         * History:                                                      *
         *           02/22/96 - display dialog even if dsname provided   *
         *           09/26/94 - minor bug fix in parse                   *
         *           09/02/94 - Reset LPRPRINT lprps to no               *
         *           08/25/94 - Fix test for options                     *
         *           04/27/94 - Add prompt option                        *
         *           01/26/94 - updated to support non-ISPF usage        *
         *           01/20/94 - created for TSO/ISPF                     *
         *                                                               *
         * Originally based upon the PSPRINT.cmd                         *
         * Written by Michael Perks (10/31/92)                           *
         * (c) Copyright IBM Corp. 1992 All Rights Reserved              *
         * modified to allow an option of lptn                           *
         *                                                               *
         * modified to run under MVS TSO/E by Lionel Dyck                *
         * to use PostScript programming by Carl J. Lydick               *
         * of CalTech picked up from comp.lang.postscript.               *
         *                                                               *
         * This eliminates the calculation of line placement and         *
         * page ejects and provides the following options:               *
         *                                                               *
         * PORT -  Portrait 80 characters by 60 lines in 11 pt. Courier  *
         * WIDE -  Portrait 132 characters by 103 lines in 6 pt. Courier *
         * LAND -  Landscape 132 characters by 60 lines in 9 pt. Courier *
         * 2UP  -  2 pages 80 characters by 66 lines side by side        *
         *         in landscape in 6 pt. Courier                         *
         *                                                               *
         * ------------------------------------------------------------- */

        parse arg psinds outname "/" options

        outname = translate(strip(outname))

        if length(psinds) >= 0 then prompt = 1
        if outname        = "@" then prompt = 1
           else if length(outname) > 0 then prompt = 0
        if length(options) > 0 then prompt = 0

        cmd = sysvar("sysicmd")
        spf = sysvar("sysispf")

        if prompt = 1 then do forever
           if spf <> "ACTIVE" then do
              say cmd": Not running under ISPF and no parameters specified"
              say cmd": terminating - review the documentation and retry."
              exit 8
              end
           Address ISPEXEC
           "Display Panel(PSPRINT)"
           if rc > 3 then exit
           if lpr = "No" then lpr = "NOLPR"
                         else lpr = ""
           if "OK" <> sysdsn(psinds) then do
               smsg = "Error"
               lmsg = sysdsn(psinds)
               "Vput (Smsg Lmsg)"
               "Setmsg Msg(Pspr002)"
                end
           else call test_pds
        end

        if length(options) > 0 then
           options = translate(options)

        /* test options for debug */
        if wordpos("DEBUG",options) > 1 then do
           trace "?i"
           x = wordpos("DEBUG",options)
           new_opt = delword(options,x,1)
           options = new_opt
           end

        /* test options for nolpr */
        if wordpos("NOLPR",options) > 1 then do
           no_lpr = "on"
           no_del = "on"
           x = wordpos("NOLPR",options)
           new_opt = delword(options,x,1)
           options = new_opt
           end

        if spf <> "ACTIVE" then no_lpr = "on"

        if length(outname) = 0 then do
           d = date(u)
           date = substr(d,7,2)substr(d,1,2)substr(d,4,2)
           s = time("L")  /* get the current time hh:mm:ss.th */
           t = substr(s,1,2)substr(s,4,2)substr(s,7,2)substr(s,10,1)
           prefix = sysvar(syspref)
           pscript_dsn = "'"prefix".pscript.D"date".T"t".ps'"
           end
        else do
             pscript_dsn = outname
             no_del = "on"
             end

        out. = ""

        Select
          When options = "PORT" then call do_port
          When options = "WIDE" then call do_wide
          When options = "LAND" then call do_land
          When options = "2UP"  then call do_2up
          Otherwise call do_port
          end

        /* test the existence of the input data set */
        if "OK" <> sysdsn(psinds) then
        do
            smsg = "Error"
            lmsg = sysdsn(psinds)
            call do_msg
            exit
        end

        x = listdsi(psinds)
        if pos("(",psinds) > 0 then sysdsorg = "PS"
        if sysdsorg = "PO" then do
           if spf <> "ACTIVE" then do
              say cmd": Has specified a partitioned data set:",
                        psinds
              say cmd": which is not supported by this command",
                     "outside of the ISPF enviornment."
              say cmd": Terminating processing.  Specify a member",
                     "name and retry."
              exit
              end
           Address ISPEXEC
           call do_pds
           exit
           end

        /* generate a ddname and dynamically allocate the output
           data set. */
        pscript_odd = "PSXO"random()
        "Alloc f("pscript_odd") ds("pscript_dsn") New Spa(30,30) Tr",
              "Recfm(V B) Lrecl(255) Blksize(0) Dsorg(PS)"

        /* read each line, quote characters and then output */
        pscript_idd = "PSXi"random()
        "Alloc f("pscript_idd") ds("psinds") Shr"
        "Execio * diskr" pscript_idd "(Finis stem in."
        "Free f("pscript_idd")"

        "Execio * diskw" pscript_odd "(stem out."
        "Execio * diskw" pscript_odd "(Finis stem in."
        "Free f("pscript_odd")"

        drop out. in.

        if no_lpr <> "on" then do
          if spf = "ACTIVE" then do
             Address ISPEXEC "Vget (lprps) Profile"
             hold_lprps = lprps
             lprps = "No"
             Address ISPEXEC "Vput (lprps) Profile"
             end
          "%lprprint" pscript_dsn
          lprps = hold_lprps
          if spf = "ACTIVE" then
             Address ISPEXEC "Vput (lprps) Profile"
          end

        x = msg("OFF")
        if no_del <> "on" then
          "Delete" pscript_dsn
          else do
            smsg = ""
            lmsg = "Output dsname is:" pscript_dsn
            call do_msg
            end

        exit

        do_msg:
            if spf = "ACTIVE" then do
               Address ISPEXEC
               "Vput (Smsg Lmsg)"
               "Setmsg Msg(Pspr002)"
               end
            else do
                 say smsg
                 say lmsg
                 end
            return

        do_port:

        do_port:
        out.1 = "%!PS-Adobe-1.0"
        out.2 = "%%Creator: Carl J Lydick"
        out.3 = "%%DocumentFonts: Courier"
        out.4 = "%%Pages: (atend)"
        out.5 = "/Courier findfont 11 scalefont setfont"
        out.6 = "/P {showpage /H 750 def} def"
        out.7 = "/Q { 36 H moveto dup length 80 gt {0 80 getinterval}",
                " if show /H H 12 sub def"
        out.8 = "   H 30 le {P} if} def"
        out.9 = "/R 0 def"
        out.10 = "/S 512 string def"
        out.11 = '/T {(", FF, ") search {R 0 ne {Q pop P} {pop pop /R 1 def}',
                " ifelse T} if} def"
        out.12 = "/L {/H 750 def {currentfile S readline not {exit} if T Q}",
                " loop showpage} def"
        out.13 = "L"
        out.0 = 13
        return

        do_wide:
        out.1 = "%!PS-Adobe-1.0"
        out.2 = "%%Creator: Carl J Lydick"
        out.3 = "%%DocumentFonts: Courier"
        out.4 = "%%Pages: (atend)"
        out.5 = "/Courier findfont 6 scalefont setfont"
        out.6 = "/P {showpage /H 750 def} def"
        out.7 = "/Q { 36 H moveto dup length 132 gt {0 132 getinterval}",
                " if show /H H 7 sub def"
        out.8 = "   H 30 le {P} if} def"
        out.9 = "/R 0 def"
        out.10 = "/S 512 string def"
        out.11 = '/T {(", FF, ") search {R 0 ne {Q pop P}',
                 " {pop pop /R 1 def} ifelse T} if} def"
        out.12 = "/L {/H 750 def {currentfile S readline not",
                 " {exit} if T Q} loop showpage} def"
        out.13 = "L"
        out.0 = 13
        return

        do_land:
        out.1 = "%!PS-Adobe-1.0"
        out.2 = "%%Creator: Carl J Lydick"
        out.3 = "%%DocumentFonts: Courier"
        out.4 = "%%Pages: (atend)"
        out.5 = "/Courier findfont 9 scalefont setfont"
        out.6 = "/P {showpage 90 rotate 0 -618 translate /H 594 def} def"
        out.7 = "/Q {36 H moveto dup length 132 gt {0 132 getinterval}",
                " if show /H H 9.5 sub def"
        out.8 = "    H 30 le {P} if} def"
        out.9 = "/R 0 def"
        out.10 = "/S 512 string def"
        out.11 = '/T {(", FF, ") search {R 0 ne {Q pop P}',
                 " {pop pop /R 1 def} ifelse T} if} def"
        out.12 = "/L {90 rotate 0 -618 translate /H 594 def",
                 " {currentfile S readline not {exit} if"
        out.13 = " T Q} loop showpage} def"
        out.14 = "L"
        out.0 = 14
        return

        do_2up:
        out.1 = "%!PS-Adobe-1.0"
        out.2 = "%%Creator: Carl J Lydick"
        out.3 = "%%DocumentFonts: Courier"
        out.4 = "%%Pages: (atend)"
        out.5 = "/Courier findfont 6 scalefont setfont"
        out.6 = "/N {showpage 90 rotate 0 -618 translate /H 538",
                " def /V 71 def} def"
        out.7 = "/O {/H 538 def /V 431 def} def"
        out.8 = "/P {V 431 ne {O} {N} ifelse} def"
        out.9 = "/Q { V H moveto dup length 80 gt {0 80 getinterval}",
                " if show /H H 7 sub def"
        out.10 = "   H 79 le {P} if} def"
        out.11 = "/R 0 def"
        out.12 = "/S 512 string def"
        out.13 = '/T {(", FF, ") search {R 0 ne {Q pop P} {pop pop',
                 " /R 1 def} ifelse T} if} def"
        out.14 = "/L {90 rotate 0 -618 translate /H 538 def /V 71 def"
        out.15 = "   {currentfile S readline not {exit} if T Q}",
                 " loop showpage} def"
        out.16 = "L"
        out.0 = 16
        return

        test_pds:
              x = listdsi(psinds)
              if pos("(",psinds) > 0 then sysdsorg = "PS"
              Select
                When sysdsorg = "PS" | pos("(",psinds) > 1
                     then
                     "Select Cmd(%"cmd  psinds psopds "/" pstype lpr ")"
                When sysdsorg = "PO"
                     then call do_pds
                Otherwise nop;
              end
        return

        do_pds:
            "Lminit Dataid(dataid) Dataset("psinds") Enq(Shrw)"
            "Lmopen Dataid("dataid") Option(Input)"
            "Lmmdisp Dataid("dataid") Option(Display)",
              "Commands(Any) Panel(PsprM)"
              do while rc == 0
                 Call process_selection
                "Lmmdisp Dataid("dataid") Option(Get)"
                 if rc == 8
                    then "Lmmdisp Dataid("dataid") Option(Display)",
                         "Commands(Any) Panel(LPRPM)"
              end
              "Lmmdisp Dataid("dataid") Option(Free)"
              "Lmclose Dataid("dataid")"
              "Lmfree  Dataid("dataid")"
            return

         process_selection:
            if left(psinds,1) = "'"
               then parse value psinds with "'" w_dsn "'"
               else w_dsn = sysvar("syspref")"."psinds
            zlmember = strip(zlmember)
            Select
            When zllcmd = "/" | zllcmd = "S"
            Then do
              "Lmmdisp Dataid("dataid") Option(Put) Member("zlmember")",
                  "Zludata(printed)"
              "Select Cmd(%"cmd  "'"w_dsn"("zlmember")'",
                  psopds "/" pstype lpr ")"
              end
            When zllcmd = "B"
            Then "Browse Dataid("dataid") Member("zlmember")"
            Otherwise nop;
            End
            return
