RUNC is an ISPF Edit macro that will invoke TSO, ISPF, (E)JES, SDSF, and
TSO Console commands that are imbedded within the active EDIT or View
data.

ERC is provided as a sample command that can be implemented in the site ISPF
command table. ERC will prompt the first time used for the dataset name of the
commands dataset and then open that dataset. This is a fast path to the
commands.

   Members:

      $DOC     - this member
      $ERCDOC  - doc on how to use the ERC command
      $RUNCLOG - How to use the %RUNCLOG command
      $USERDOC - doc to help the end user
      JUST$FUN - short article about RUNC
      EKKO     - Assembler source for EKKO
      EKKO$    - JCL to assemble and link EKKO
      EKKOH    - TSO Help member for EKKO
      LICENSE  - GPL License
      SUPPORT  - Statement of Support
      TESTRUNC - Sample exec to test RUNC

Installation:

Implementation:
   1. Copy the  EXEC members into your SYSEXEC (or SYSPROC) library
   2. Copy the  PANELS members into your ISPPLIB library
   3. Receive the LOAD.XMIT dataset to create a LOAD library
   4. Optional: Copy the LOAD member EKKO into your ISPLLIB, STEPLIB, or
      Linklist library (see info on EKKO below)
      - *IF* using EKKO then edit the RUNC exec to change the rputl
        variable as documented in the code to use EKKO instead of the
        %RUNCPUTL exec
   5. Optional: If using EKKO then copy EKKOH into your SYSHELP
      dataset as EKKO. This is the TSO Help member.
   6. Test with the TESTRUNC exec
      Does altlib/libdef and invokes ISPF edit on a dataset to
      allow testing/validation of RUNC.

Dependencies:
   1. STEMEDIT from CBTTape.org File 183 is required for RUNC to be used.
      Download and install.
      *or*
      Use the version of the STEMEDIT load module included in the
      Load library distributed with this package.

RUNCPUTL not required if the EKKO command is used.

If using the EKKO command:
 - copy the EKKOH member into your installation local HELP PDS as EKKO.
 - Use member EKKO$ JCL to assemble and linkedit the EKKO command into
   a load library. The library can be in either Linklist, a Steplib, or
   an ISPLLIB library.

Copy the SAMPLES members into a new PDS that will be the location for
your sample command members that you can share with your users. The PDS
can be RECFM=FB LRECL=80 or RECFM=VB LRECL=255 - your choice.  Using ERC
for the shared command PDS is acceptable and will, by default, open the
command PDS, or member, using ISPF View. This allows multiple users of
the same data without enabling Edit capabilities.

NOTE: the RUNCPUTL works but is not as efficient as a real TSO command.
      Thus RUNC allows the installation to change the customization
      variable RPUTL from %runcputl to ekko.  EKKO is a TSO command
      included in this package (thanks to Sam Golob for pointing me to
      it).  EKKO does the same thing as RUNCPUTL but using assembler
      code so it is more efficient. This will be obvious if large
      amounts of data are captured during the command execution.

      The Log dataset type is also a customization value in the RUNC
      exec.  Find *custom* and change the logtype as documented in the
      code.

Update your ISPCMDS ISPF Command Table to add ERC:

     Verb:    ERC
     Trunc:   0
     Action:  SELECT CMD(%ERC &ZPARM) NEWAPPL(ISR)
     Desc:    Edit RUNC Command Dataset

Usage:  See $USERDOC
