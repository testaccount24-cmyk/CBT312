        /* --------------------  rexx procedure  -------------------- *
         * Name:      LOGITCPY                                        *
         *                                                            *
         * Function:  To copy the LOGIT log data set and optionally   *
         *            reinitialize it                                 *
         *                                                            *
         * Syntax:    %logitcpy input_log output_log option           *
         *                                                            *
         *            input_log is the current log data set name      *
         *                                                            *
         *            output_log is the data set to be created        *
         *            containing a copy of the input_log              *
         *                                                            *
         *            clear is optional and if specified will         *
         *            empty out the input_log                         *
         *                                                            *
         * Author:    Lionel B. Dyck                                  *
         *            Kaiser Permanente Information Technology        *
         *            Walnut Creek, CA 94598                          *
         *            (925) 926-5332                                  *
         *            Internet: lionel.b.dyck@kp.org                  *
         *                                                            *
         * History:                                                   *
         *            04/12/04 - Minor correction in sleep variable   *
         *            04/02/04 - creation                             *
         *                                                            *
         * ---------------------------------------------------------- */
         arg logds output clear

         if sysdsn(logds) <> "OK" then do
            say "LOGITCPY Error: The input log data set:" logds
            say "              " sysvar(logds)
            say "Exiting..."
            exit 8
            end

         if sysdsn(output) = "OK" then do
            say "LOGITCPY Error: The output log data set:" output
            say "                already exists. Please try again."
            say "                The output can not already exist."
            say "Exiting..."
            exit 8
            end

        /* ------------------------------------------------------ *
         * Define the number of seconds to sleep between attempts *
         * ------------------------------------------------------ */
         sleep = 1

        /* ----------------------------------- *
         * Define the number of retry attempts *
         * ----------------------------------- */
         retry = 10

         dd = "logit"random(999)
         c  = 1
         call msg "off"

         do forever
            c = c + 1
            if c > retry then do
               say "Logit: Allocation of the log data set:" logds
               say "       failed after" retry "attempts."
               exit 4
               end
            "alloc f("dd") shr ds("logds") reuse"
            if rc > 0 then iterate
            "Execio * diskr" dd "(finis stem in."
            if clear <> "" then do
            queue date('s') time('n') ,
                  mvsvar("symdef","jobname") sysvar('sysuid') ,
                  mvsvar('sysname') ,
                  "Log data set copied to" output "and cleared."
               "Execio 1 diskw" dd "(finis"
               end
            "Free f("dd")"
            "Alloc f("dd") ds("output") new like("logds")"
            "Execio * diskw" dd "(finis stem in."
            "Free f("dd")"
            leave
            end

        /* --------------------------------------------------- *
         * Sleep Routine. This routine will call the USS Sleep *
         * routine and sleep for 1 second.                     *
         * --------------------------------------------------- */
         Sleep:
         call syscalls('ON')           /* allow calls to omvs */
         address 'SYSCALL' 'SLEEP ('sleep')'
         return
