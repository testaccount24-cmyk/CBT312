  /*%NOcomment ----------  rexx procedure  -------------------- *
  | Name:      DEALLOC                                         |
  |                                                            |
  | Function:  Remove a dataset from an Allocation             |
  |                                                            |
  | Syntax:    %dealloc ddname dsname                          |
  |                                                            |
  | Author:    Lionel B. Dyck                                  |
  |                                                            |
  | History:  (most recent on top)                             |
  |            08/23/20 LBD - Creation                         |
  |                                                            |
  * ---------------------------------------------------------- *
  | Copyright (C) 2020 by Lionel B. Dyck under GPLV3           |
  * ---------------------------------------------------------- */
  arg ddname dsname

  /* --------------------------- *
  | Get the name of the command |
  * --------------------------- */
  parse source . . name .

  /* ----------------------------- *
  | Validate (somewhat) the input |
  * ----------------------------- */
  if ddname = '' then bad = 1
  if dsname = '' then bad = 1
  if pos('.',ddname) > 1 then bad = 1

  if bad = 1 then do
    say 'Concatenation command failed due to invalid syntax.'
    say ' '
    say 'Correct syntax is:'
    say ' '
    say '%'name 'ddname dsname'
    say ' '
    exit 8
  end

  /* ------------------------------------------- *
  | Validate and fully qualify the dataset name |
  * ------------------------------------------- */
  x = listdsi(dsname)
  if x > 0 then do
    say name 'Error with provided dataset name:' dsname
    say 'Message:' sysmsglvl2
    exit 8
  end
  dsname = "'"sysdsname"'"

  /* -------------------------------------------- *
  | Get the list of currently allocated datasets |
  * -------------------------------------------- */
  dsnames = get_allocations(ddname)

  if dsnames = 0 then do
    say name 'Error: the requested ddname' ddname 'is not allocated.'
    exit 12
  end

  /* ------------------------------------------------ *
  | Remove the requested dataset from the allocation |
  * ------------------------------------------------ */
  dp = wordpos(dsname,dsnames)
  if dp = 0 then do
    say name 'Error: the requested dataset is not found in the' ,
      'current allocation for dd:' ddname
    say name 'The requested dataset name is:' dsname
    exit 12
  end
  dsnames = delword(dsnames,dp,1)

  /* -------------- *
  | Now reallocate |
  * -------------- */
  call outtrap 'x.'
  'Free file('ddname')'
  frc = rc
  call outtrap 'off'
  if rc > 0 then do
    say name 'failed because the requested dd is open and thus' ,
      'may not be changed.'
    exit 8
  end
  'Alloc f('ddname') shr ds('dsnames') reuse'
  exit

  /* ------------------------------------------------ *
  | Fixup the provided dataset name to fully qualify |
  * ------------------------------------------------ */
Fix_DSN:
  x = listdsi(dsn)
  if x > 0 then do
    say dsn sysmsglvl2
    exit 8
  end
  dsn = "'"sysdsname"'"
  return

  /* ------------------------------------ *
  | Get the currently allocated datasets |
  * ------------------------------------ */
Get_Allocations: Procedure
  arg cdd

  call outtrap 'trap.'
  "lista sta"
  call outtrap 'off'

  parse value '' with dd tdd dsns

  do i = 1 to trap.0
    if left(trap.i,1) = '-' then iterate
    if word(trap.i,1) /= 'TERMFILE' then
    if left(trap.i,1) /= ' ' then dsns = dsns "'"word(trap.i,1)"'"
    if word(trap.i,1) = 'KEEP' then iterate
    if left(trap.i,1) = ' ' then do
      dd = word(trap.i,1)
      if tdd = '' then do
        tdd = dd
        iterate
      end
      if tdd = cdd then do
        return subword(dsns,1,words(dsns)-1)
        exit
      end
      dsns = word(dsns,words(dsns))
      tdd = dd
    end
  end
  if tdd = cdd then return subword(dsns,1,words(dsns))
  return 0
