./ ADD NAME=PSPRH0   0100-1994025-1994025-1028-00071-00071-00000-$A1238
)Attr Default(@+_)
/* _ type( input) intens(high) caps(on ) just(left )               */
   ! type(text) intens(high) caps(off) just(asis ) color(white)
      hilite(reverse)
   $ type(output) intens(high) caps(off) just(asis ) color(white)
      hilite(reverse)
   ` type(text) intens(high) caps(off) just(asis ) color(yellow)
   ~ type(text) intens(high) caps(off) just(asis ) color(turq)
   @ type(text) intens(high)
   + type(text  ) intens(low )
     skip(on)
   # area(SCRL) Extend(ON)
)Body
+------------------------! Convert Text to PostScript +-------------------------
@Command ===>_zcmd
@
+
#help -------------------------------------------------------------------------#
)Area Help
`    Information on Converting text to PostScript
~
~    This ISPF application will convert text data into a data stream that
~    can be printed on a PostScript printer.
~
~    To print this data stream you must send the data to an application
~    that will convert it from EBCDIC (the MVS character set) to ASCII
~    and then direct the data stream to a PostScript printer.  The most
~    common technique for this is to use the LPR TCP/IP TSO command.
~
~    The information that is asked for on the panel is:
~
`    Input Data Set      ===>
~
~    This is the data set name that contains the information that is to be
~    converted to PostScript.  The format of this field is:
~
~              user.data
~              user.data(member)
~              'prefix.user.data'
~
`    Print Orientation   ===>
~
~    This is the orientation of the resulting printed output.  The valid
~    options are:
~
         PORT -  Portrait 80 characters by 60 lines in 11 pt. Courier
         WIDE -  Portrait 132 characters by 103 lines in 6 pt. Courier
         LAND -  Landscape 132 characters by 60 lines in 9 pt. Courier
         2UP  -  2 pages 80 characters by 66 lines side by side
                 in landscape in 6 pt. Courier
~
`    Invoke LPRPRINT     ===>
~
~    This allows you to inform the application that the ISPF LPRPRINT Dialog
~    is not to be automatically invoked.  If`no~is selected then the converted
~    data stream will be saved into a data set (either the specified output
~    data set or a dynamically generated data set).
~
`    Output Data Set     ===>
~
~    This field is optional and defines an output data set into which
~    the converted PostScript data stream will be stored.
+
!Note:`Use the Enter key to just scroll down this tutorial or
`      Use key $LEFT`to scroll down and key $RIGHT`to scroll up.
)Init
  .cursor = zcmd
  &left  = PFK(LEFT)
  &right = PFK(RIGHT)
)Proc
)end
./ ADD NAME=PSPRINT  0107-1994025-1996003-1024-00055-00047-00000-SYSLBD
)Attr
   @ type( input) intens(high) caps(off) just(left ) pad('_')
     color(white)
   ! type( input) intens(high) caps(off) just(left ) color(white)
   _ type( input) intens(high) caps(on ) just(left ) color(white)
   ¬ type(text) intens(low ) caps(off) just(asis ) color(white)
         hilite(uscore)
   | type(text) intens(high) caps(off) just(asis ) color(white)
         hilite(uscore)
   # type(text) intens(high) caps(on) just(left ) color(yellow)
         hilite(uscore)
   ` type(text) intens(high) caps(off) just(asis ) color(turq)
   ~ type(text) intens(low ) caps(off) just(asis ) color(turq)
   % type(text) intens(low ) caps(off) just(asis ) color(white)
)Body
+------------------------% Convert text to PostScript +-------------------------
%Command ===>_zcmd

`Enter/Verify:
`
`    Input Data Set      %===>_psinds
%
`    Print orientation   %===>!pstype+    see list below
%
`    Invoke LPRPRINT     %===>!lpr+       Yes or No
`
`    Output Data Set     %===>_psopds
`    (optional)
`
`    Valid orientations:
`          PORT+-  Portrait 80 characters by 60 lines in 11 pt. Courier
`          WIDE+-  Portrait 132 characters by 103 lines in 6 pt. Courier
`          LAND+-  Landscape 132 characters by 60 lines in 9 pt. Courier
`          2UP +-  2 pages 80 characters by 66 lines side by side
`              +   in landscape in 6 pt. Courier
)Init
 .HELP = psprh0
 .cursor  = psinds
 &pstype= trans(trunc(&pstype,1)
            P,Port p,Port L,Land l,Land, W,Wide w,Wide 2,2UP &z,Port)
 &lpr     = trans(trunc(&lp,1) Y,Yes N,No y,Yes n,No &z,Yes)
)Reinit
 .cursor  = psinds
 &pstype= trans(trunc(&pstype,1)
            P,Port p,Port L,Land l,Land, W,Wide w,Wide 2,2UP &z,Port)
 &lpr     = trans(trunc(&lp,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)
)Proc
 &pstype= trans(trunc(&pstype,1) P,Port p,Port L,Land l,Land,
                                     W,Wide w,Wide 2,2UP &z,Port *,*)
 &lpr     = trans(trunc(&lp,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)
 ver (&psinds,nonblank,dsname,msg=pspr001)
 ver (&pstype,nb,list,Port,Land,Wide,2UP)
 ver (&lpr,nb,list,Yes,No)
 ver (&psopds,dsname,msg=pspr003)
)End
./ ADD NAME=PSPRM    0101-1994013-1994018-0732-00031-00030-00000-$A1238
)ATTR
  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)
  | AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)
  + TYPE(TEXT) INTENS(LOW)
  ¢ TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)
 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)
 02 TYPE(DATAOUT) INTENS(LOW)
 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)
 04 TYPE(DATAOUT)  INTENS(LOW)
 05 TYPE(DATAOUT)  INTENS(HIGH)
 06 TYPE(DATAOUT)  INTENS(LOW)
)BODY WIDTH(80)
%Member List -- &ZDSN --------------------------------------%ROW¢ZMLCR%OF¢ZMLTR+
%Command ===>_ZCMD                                            %Scroll ===>_Z   +
%Commands:      LOCATE, RESET, SELECT, SORT, HELP                              +
%Line commands: / or S = Select, B = Browse                                    +
&ZMLCOLS
|ZDATA ------------------------------------------------------------------------|
|                                                                              |
| -----------------------------------------------------------------------------|
)INIT
  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */
  .HELP = ISR01130
)PROC
  VPUT (ZSCML) PROFILE
)END
 /*  $M1= MEMLIST   M230     860923   158590 : FUNCTION TEST          */
 /*   PTM00000184                                                     */
 /*                                                                   */
 /*   CHANGED 3 LINES                                            3@M1C*/
/* 5665-402 (C) COPYRIGHT IBM CORP 1980, 1989 */
