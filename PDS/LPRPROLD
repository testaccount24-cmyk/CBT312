./ ADD NAME=$DOC     0105-99068-14080-1054-00024-00027-00000-LBDYCK
This dataset contains the LPRPRINT ISPF dialog:

LPRPRINT - used to print using the OS/390 (or z/OS) TCP/IP LPR
           command to any system with a LPD server.  This
           includes intelligent printers which have LPD built-in.

The members of this dataset are in IEBUPDTE format.

$DOC     - What you are reading
LPRPRINT - The above rexx exec which is the entry point to
           the dialog
MSGS     - ISPF messages
LPRPH0   - ISPF panel
LPRPM    - ISPF panel
LPRPRIN0 - ISPF panel

No warranty comes with this dialog - use it at your own risk.  It
may require customization to work in your environment.

Comments, suggestion, and an occasional (not too many) complaints are
welcome to the author:

  Lionel Dyck
  E-Mail:  lbdyck@gmail.com
./ ADD NAME=LPREDIT  0101-14079-14079-2246-00026-00026-00000-REXX
/* --------------------  rexx procedure  -------------------- *
 * Name:      LPREDIT                                         *
 *                                                            *
 * Function:  ISPF Edit macro to invoke LPRPRINT              *
 *            on the active data set, which is part           *
 *            of the PRINT member of CBT File 312.            *
 *                                                            *
 * Syntax:    LPREDIT                                         *
 *                                                            *
 * Author:    Lionel B. Dyck                                  *
 *                                                            *
 * History:   03/20/14 - Creation                             *
 *                                                            *
 * ---------------------------------------------------------- */
 Address ISREdit
 'Macro'
 "(currdsn)  = DATASET"
 "(currmem) = MEMBER"

 if length(currmem) = 0
    then mem = ''
    else mem = '('currmem')'

 dataset = "'"currdsn""mem"'"

 Address ISPExec 'Select cmd(%lprprint' dataset ')'
./ ADD NAME=LPRPH0   0100-95010-95010-1558-00117-00117-00000-PANEL
)Attr Default(@+_)
/* _ type( input) intens(high) caps(on ) just(left )               */
   ! type(text) intens(high) caps(off) just(asis ) color(white)
      hilite(reverse)
   $ type(output) intens(high) caps(off) just(asis ) color(white)
      hilite(reverse)
   ` type(text) intens(high) caps(off) just(asis ) color(yellow)
   ~ type(text) intens(high) caps(off) just(asis ) color(turq)
   @ type(text) intens(high)
   + type(text  ) intens(low )
     skip(on)
   # area(SCRL) Extend(ON)
)Body
+------------------! Print Data via TCP/IP LPR Information +--------------------
@Command ===>_zcmd
@
+
#help -------------------------------------------------------------------------#
)Area Help
`    Information on Printing to TCP/IP Connected Printers using LPR
~
~    This ISPF application provides an easy to use interface for printing
~    user data on printers that are remotely attached via the TCP/IP network.
~
~    LPR is the TCP/IP Line Printer client command that prints the user
~    information on a remote printer connected via the TCP/IP network.  It
~    communicates to the LPD (Line Printer server) on a remote Host on
~    which the requested printer is attached.
~
~    The information that is asked for on the panel is:
~
`    Input Data Set      ===>
~
~    This is the data set name that contains the information that is to be
~    printed on the remote printer.  The format is:
~
~              user.data
~              user.data(member)
~              'prefix.user.data'
~
`    Printer Name        ===>
~
~    This is the name of the printer as it is identified to the Host
~    on which the printer is attached.
~
~       e.g.   lpt1
~              IBM4019L
~
`    Host Name (node)    ===>
~
~    This is the TCP/IP Host Name on which the LPD (Line Printer server)
~    is active that owns the specified printer.
~
~       e.g.   iscprint.rockwell.com
~
`    Binary              ===>
~
~    Used to specify if the user data is to be translated from EBCDIC
~    to ASCII.  Specify`Yes~if the data is already in ASCII format and
~    is not to be translated by the LPR command.
~
`    Carriage Control    ===>
~
~    Specify`Yes~if the data to be printed contains carriage control
~    and the DCB of the data set does not indicate this fact.  Otherwise
~    specify`No~.  If the DCB contains carriage control then it will be
~    used.
~
`    Copies              ===>
~
~    Indicates the number of copies of the data to be printed.
~
`    Lines per Page      ===>
~
~    Indicates the number of lines of data per page to be printed before
~    a new page is forced.  By specifying 0 the maximum number of lines
~    per page allowed by the printer will be printed.
~
`    Header Info         ===>
~
~    Indicates if you want a header printed with the name of the data set
~    being printed on the top of every page.  Only for No Binary and No CC.
~
`    Burst Page          ===>
~
~    Indicates if you want a banner page to be printed before your
~    data.  This page is used as a separator page between multiple
~    print requests and contains the ISPF Host Name, TSO Userid, and
~    the data set name being printed.
~
`    Notify Complete     ===>
~
~    This option will request that an electronic mail message be generated
~    to you when the data has completed printing on the printer.
~    !Note:`this is not supported by all versions of LPD so even if you
~          `request the message, you may not receive it.
~
`    PostScript          ===>
~
~    This option may be Portrait, Landscape, or No.  If 'no' is specified then
~    no Postscript control headers will be generated for printing on a Postscrpt
~    printer.  Portrait and Landscape will cause the appropriate headers to be
~    inserted into the data stream. `Do not use this on a true Postscript file.
~
`    Other Options       ===>
~
~    This option will allow the user to enter other LPR options that are not
~    directly supported by this dialog.
+
!Note:`Use the Enter key to just scroll down this tutorial or
`      Use key $LEFT`to scroll down and key $RIGHT`to scroll up.
)Init
  .cursor = zcmd
  &left  = PFK(LEFT)
  &right = PFK(RIGHT)
)Proc
)end
./ ADD NAME=LPRPM    0101-94013-94018-0732-00031-00030-00000-PANEL
)ATTR
  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)
  | AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)
  + TYPE(TEXT) INTENS(LOW)
  ¢ TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)
 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)
 02 TYPE(DATAOUT) INTENS(LOW)
 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)
 04 TYPE(DATAOUT)  INTENS(LOW)
 05 TYPE(DATAOUT)  INTENS(HIGH)
 06 TYPE(DATAOUT)  INTENS(LOW)
)BODY WIDTH(80)
%Member List -- &ZDSN --------------------------------------%ROW¢ZMLCR%OF¢ZMLTR+
%Command ===>_ZCMD                                            %Scroll ===>_Z   +
%Commands:      LOCATE, RESET, SELECT, SORT, HELP                              +
%Line commands: / or S = Select, B = Browse                                    +
&ZMLCOLS
|ZDATA ------------------------------------------------------------------------|
|                                                                              |
| -----------------------------------------------------------------------------|
)INIT
  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */
  .HELP = ISR01130
)PROC
  VPUT (ZSCML) PROFILE
)END
 /*  $M1= MEMLIST   M230     860923   158590 : FUNCTION TEST          */
 /*   PTM00000184                                                     */
 /*                                                                   */
 /*   CHANGED 3 LINES                                            3@M1C*/
/* 5665-402 (C) COPYRIGHT IBM CORP 1980, 1989 */
./ ADD NAME=LPRPRINT 0101-14080-14080-1046-00133-00133-00000-REXX
        /* ---------------------  rexx procedure  ---------------------- *
         * Name:      LPRPrint                                           *
         *                                                               *
         * Function:  Invoked by the user or via another ISPF dialog     *
         *            to invoke the LPRPRIN0 ISPF Panel and then use     *
         *            the TCP/IP LPR command to print the specified      *
         *            data set on a TCP/IP connected printer.            *
         *                                                               *
         *            Note that the specified Host must have LPD active  *
         *            to receive the data.                               *
         *                                                               *
         * Syntax:    %lprprint dsname                                   *
         *                                                               *
         *            dsname is optional                                 *
         *                                                               *
         * Author:    Lionel B. Dyck                                     *
         *            Kaiser Permanente                                  *
         *            Walnut Creek, CA 94598                             *
         *            (510) 926-5332                                     *
         *            IBMMail:  USKFHLBD                                 *
         *            Internet: syslbd@ncal.kaiperm.org                  *
         *                                                               *
         * History:                                                      *
         *            03/20/97 - save inds in profile                    *
         *            01/10/95 - Remove ack as tcp/ip 3.1 doesn't        *
         *            08/29/94 - update for Postscript option            *
         *            06/23/94 - fix parse for pds dsname                *
         *            01/21/94 - fix for pds input w/member name         *
         *            01/18/94 - add support for member selection if     *
         *                       dsname is pds and no member given       *
         *            01/17/94 - fix for invalid dsn and for messages    *
         *            01/07/94 - add option for additional user specified*
         *                       parameters other than what is directly  *
         *                       supported                               *
         *            01/04/94 - add entry optional parameter of dsn     *
         *                       and support ACK option                  *
         *            01/03/94 - updated to cleanup invocation           *
         *            12/22/93 - creation of application                 *
         *                                                               *
         * ------------------------------------------------------------- */

         arg inds

         Address ISPEXEC

         do forever
           "VGET (lprdest lprhost lprbin lprcc lprntfy lprlcnt lprhead ",
                 "lprburst lprntfy lprps lpruopt lprpinds) Profile"
            if length(inds) > 0 then lprpinds = inds
            "Display Panel(LPRPRIN0)"
            if rc > 3 then exit 0
           "VPUT (lprdest lprhost lprbin lprcc lprntfy lprlcnt lprhead ",
                 "lprburst lprntfy lprps lpruopt lprpinds) Profile"

         if sysdsn(lprpinds) <> "OK" then do
            lprsmsg = "Error"
            lprlmsg = "Specified data set does not exist:" lprpinds
            "Vput (lprsmsg lprlmsg)"
            "SETMSG MSG(LPR002)"
            end
         else do
              parse value "" with binary cc mail line_count header burst,
                             copies postscr
              if lprbin   = "Yes" then binary = "Binary"
              if lprcc    = "Yes" then cc     = "CC"
                                  else cc     = "NOCC"
              if lprntfy  = "Yes" then mail   = "Mail"
              if lprhead  = "No"  then header = "NoHeader"
              if lprburst = "No"  then burst  = "NoBurst"
              if lprcopy  > 1     then copies = "Copies" lprcopy
              if lprlcnt  > 0     then line_count = "Linecount" lprlcnt
              if lprps    = "Portrait"  then postscr = "Postscript"
              if lprps    = "Landscape" then postscr = "Landscape"

              x = listdsi(lprpinds)
              if pos("(",lprpinds) > 0 then sysdsorg = "PS"
              Select
                When sysdsorg = "PS" | pos("(",lprpinds) > 1
                     then call do_lpr lprpinds
                When sysdsorg = "PO"
                     then call do_pds
                Otherwise nop;
              end
              end
         end

         do_pds:
            "Lminit Dataid(dataid) Dataset("lprpinds") Enq(Shrw)"
            "Lmopen Dataid("dataid") Option(Input)"
            "Lmmdisp Dataid("dataid") Option(Display)",
              "Commands(Any) Panel(LPRPM)"
              do while rc == 0
                 Call process_selection
                "Lmmdisp Dataid("dataid") Option(Get)"
                 if rc == 8
                    then "Lmmdisp Dataid("dataid") Option(Display)",
                         "Commands(Any) Panel(LPRPM)"
              end
              "Lmmdisp Dataid("dataid") Option(Free)"
              "Lmclose Dataid("dataid")"
              "Lmfree  Dataid("dataid")"
            return

         process_selection:
            if left(lprpinds,1) = "'"
               then parse value lprpinds with "'" w_dsn "'"
               else w_dsn = sysvar("syspref")"."lprpinds
            zlmember = strip(zlmember)
            Select
            When zllcmd = "/" | zllcmd = "S"
            Then do
              "Lmmdisp Dataid("dataid") Option(Put) Member("zlmember")",
                  "Zludata(printed)"
              call do_lpr "'"w_dsn"("zlmember")'"
              end
            When zllcmd = "B"
            Then "Browse Dataid("dataid") Member("zlmember")"
            Otherwise nop;
            End
            return

         do_lpr:
            arg dsn
            Address TSO,
           "LPR" dsn "(Printer" lprdest "Host" lprhost "Type",
                 binary cc mail line_count header burst copies ,
                 postscr lpruopt
           if sysdsorg <> "PS" then return
           lprsmsg = ""
           lprlmsg = lprpinds "printed to" lprdest "at" lprhost
          "Vput (lprsmsg lprlmsg)"
          "SETMSG MSG(LPR002)"
           return
./ ADD NAME=LPRPRIN0 0101-95010-99043-1101-00079-00079-00000-PANEL
)Attr
   @ type( input) intens(high) caps(off) just(left ) pad('_')
     color(white)
   ! type( input) intens(high) caps(off) just(left ) color(white)
   _ type( input) intens(high) caps(on ) just(left ) color(white)
   ^ type(text) intens(low ) caps(off) just(asis ) color(white)
         hilite(uscore)
   | type(text) intens(high) caps(off) just(asis ) color(white)
         hilite(uscore)
   # type(text) intens(high) caps(on) just(left ) color(yellow)
         hilite(uscore)
   ` type(text) intens(high) caps(off) just(asis ) color(turq)
   ~ type(text) intens(low ) caps(off) just(asis ) color(turq)
   % type(text) intens(low ) caps(off) just(asis ) color(white)
)Body
+--------------------% Print Data via TCP/IP LPR Command +----------------------
%Command ===>_zcmd
`
`Enter/Verify:
`    Input Data Set    %===>_lprpinds                                         +
%
`    Printer Name      %===>!lprdest                                          +
`    Host Name (node)  %===>!lprhost                                          +
%
`    Binary            %===>!lprbin+   Use if the file is already ASCII
`    Carriage Control  %===>!lprcc+    Honor Carriage Control in Column 1
`    Copies            %===>!lprcopy+
`    Lines per Page    %===>!lprlcnt+  Lines per page if no CC or (0=default)
`    Header Info       %===>!lprhead+  Generate header information
`    Burst Page        %===>!lprburst+ Generate a burst page on the printer
`    Notify Complete   %===>!lprntfy+  Send Mail when print complete
`    PostScript        %===>!lprps    +Portrait, Landscape, or No
`    Other Options     %===>@lpruopt                                           +
`
)Init
 .HELP = lprph0
 .cursor  = lprpinds
 &lprbin  = trans(trunc(&lprbin,1) Y,Yes N,No y,Yes n,No &z,No)
 &lprcc   = trans(trunc(&lprcc,1) Y,Yes N,No y,Yes n,No &z,No)
 &lprcopy = trans(&lprcopy &z,1 *,*)
 &lprlcnt = trans(&lprlcnt &z,0 *,*)
 &lprhead = trans(trunc(&lprhead,1) Y,Yes N,No y,Yes n,No &z,Yes)
 &lprburst= trans(trunc(&lprburst,1) Y,Yes N,No y,Yes n,No &z,Yes)
 &lprntfy = trans(trunc(&lprntfy,1) Y,Yes N,No y,Yes n,No &z,No)
 &lprps   = trans(trunc(&lprps,1) P,Portrait, L,Landscape N,No
                                  p,Portrait, l,Landscape n,No &z,No)
)Reinit
 .cursor = lprpinds
 &lprbin  = trans(trunc(&lprbin,1) Y,Yes N,No y,Yes n,No &z,No)
 &lprcc   = trans(trunc(&lprcc,1) Y,Yes N,No y,Yes n,No &z,No)
 &lprcopy = trans(&lprcopy &z,1 *,*)
 &lprlcnt = trans(&lprlcnt &z,0 *,*)
 &lprhead = trans(trunc(&lprhead,1) Y,Yes N,No y,Yes n,No &z,Yes)
 &lprburst= trans(trunc(&lprburst,1) Y,Yes N,No y,Yes n,No &z,Yes)
 &lprntfy = trans(trunc(&lprntfy,1) Y,Yes N,No y,Yes n,No &z,No)
 &lprps   = trans(trunc(&lprps,1) P,Portrait, L,Landscape N,No
                                  p,Portrait, l,Landscape n,No &z,No)
)Proc
 &lprbin = trans(trunc(&lprbin,1) Y,Yes N,No y,Yes n,No &z,No *,*)
 &lprcc   = trans(trunc(&lprcc,1) Y,Yes N,No y,Yes n,No &z,No *,*)
 &lprcopy = trans(&lprcopy &z,1 *,*)
 &lprlcnt = trans(&lprlcnt &z,0 *,*)
 &lprhead = trans(trunc(&lprhead,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)
 &lprburst= trans(trunc(&lprburst,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)
 &lprntfy = trans(trunc(&lprntfy,1) Y,Yes N,No y,Yes n,No &z,No *,*)
 &lprps   = trans(trunc(&lprps,1) P,Portrait, L,Landscape N,No
                                  p,Portrait, l,Landscape n,No &z,No *,*)
 ver (&lprpinds,nonblank,dsname,msg=lpr001)
 ver (&lprdest,nb)
 ver (&lprhost,nb)
 ver (&lprbin,nb,list,Yes,No)
 ver (&lprcc,nb,list,Yes,No)
 ver (&lprcopy,nb,num)
 ver (&lprlcnt,nb,num)
 ver (&lprhead,nb,list,Yes,No)
 ver (&lprburst,nb,list,Yes,No)
 ver (&lprntfy,nb,list,Yes,No)
 ver (&lprps,nb,list,Portrait,Landscape,No)
)End
./ ADD NAME=LPR00    0105-93356-93356-1227-00004-00004-00000-MSGS
LPR001
'Input data set name must be specified and must be a valid dsname'
LPR002  '&LPRSMSG' .WINDOW=NORESP .TYPE=NOTIFY
'&LPRLMSG'
