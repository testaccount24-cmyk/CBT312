/* --------------------  rexx procedure  -------------------- *
 | Name:      IPLTCHK                                         |
 |                                                            |
 | Function:  Generate ADRDSSU Step and control cards         |
 |            to print the first track of the selected        |
 |            disk volumes.                                   |
 |                                                            |
 |            The main purpose is to find the disk volumes    |
 |            that have IPL Text installed on them and        |
 |            help to identify which type of IPL Text using   |
 |            the trusted, real-time, reliable, always        |
 |            available, and free utility IEB-EYE-BALL to     |
 |            review.                                         |
 |                                                            |
 | Syntax:    %ipltchk filter(s)                              |
 |                                                            |
 |            filters are any strings that must be found      |
 |            within the volser to be used.                   |
 |                                                            |
 | Usage:  Execute with, or without a filter, to generate the |
 |         ADRDSSU JCL and control statements to print track  |
 |         0 for the requested volumes. At the end of use     |
 |         the user is placed into ISPF Edit on the results   |
 |         and may then insert a JOB card, tailor however     |
 |         they wish, and submit it. Then review the OUTPUT   |
 |         DD Sysout for the information.                     |
 |                                                            |
 | Dependencies:  DUDASD is required from CBT Tape File 612   |
 |                                                            |
 | Author:    Lionel B. Dyck                                  |
 |                                                            |
 | Acknowledgements:  Thanks to Robert Richards for the tip   |
 |                    to use ADRDSSU PRINT.                   |
 |                                                            |
 | History:  (most recent on top)                             |
 |            09/15/18 - Rename to IPLTCHK from IPLCHK        |
 |                     - Make Edit data a temp file           |
 |                     - Add more JCL statements              |
 |            09/14/18 - Creation                             |
 |                                                            |
 * ---------------------------------------------------------- */
  arg filter

/* ---------------------------- *
 | capture volumes using dudasd |
 * ---------------------------- */
  call outtrap 'v.'
  'dudasd'
  call outtrap 'off'

/* --------------------------------------- *
 | Process dudasd to build list of volumes |
 * --------------------------------------- */
  str = ''
  do i = 1 to v.0
    do x = 1 to 4
      parse value v.i with x1 vol x2 v.i
      vol = left(vol,6)
      if strip(filter) = '' then
      str = str vol
      else do f = 1 to words(filter)
        if pos(word(filter,f),vol) > 0 then str = str vol
      end
    end
  end

/* ---------------------------------------- *
 | Now generate the JCL - less the JOB Card |
 * ---------------------------------------- */
  c = 0
  call add '//IPLTCHK JOB ... '
  call add '//OUT   OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)'
  call add '//* ----------------------------------------------- '
  call add '//* Report on the IPL Text on the requested volumes'
  call add '//* ----------------------------------------------- '
  call add '//DUMP01   EXEC PGM=ADRDSSU,REGION=4096K'
  call add '//SYSPRINT DD   SYSOUT=*'
  call add '//OUTPUT   DD   SYSOUT=*'
  call add '//SYSIN     DD *'
  do i = 1 to words(str)
    vol = word(str,i)
    call add '  PRINT TRACKS(0,0,0,0) - '
    call add '     INDYNAM('vol') - '
    call add '     ADMIN - '
    call add '     OUTDDNAME(OUTPUT)'
  end
  call add '/*'
  o.0 = c
  'alloc f(out) spa(5,5) tr recfm(f b) lrecl(80) unit(vio)'
  'execio * diskw out (finis stem o.'

/* -------------------------- *
 | Done so edit the results |
 * -------------------------- */
  Address ISPExec
  "LMINIT DATAID(ipltchk) DDName(out)"
  'edit dataid('ipltchk')'
  "LMFree Dataid("ipltchk")"
  address TSO 'free  f(out)'
  exit

/* -------------------------------------------- *
 | Routine to add the record to the output stem |
 * -------------------------------------------- */
add:
  arg opt
  c = c + 1
  o.c = opt
  return
